package com.jetbrains.edu.python.learning.temp.model

import kotlinx.serialization.Serializable

/**
 * Represents a general message interface used within the system.
 * Implementations of this interface define various message types
 * and their associated content.
 *
 * @property messageType The type of the message, represented by an `LLMMessageType` enumeration value.
 */
@Serializable
sealed interface Message {
    val messageType: MessageType
}

@Serializable
sealed interface AgentMessage : Message {
    val message: String
}

/**
 * Represents a message generated by the language model in the system.
 *
 * This implementation of the `Message` interface can be either a log message (default)
 * or a message intended for the user. Log messages and user messages differ by color and title.
 *
 * @property message The content of the message provided by the language model.
 * @property messageType The type of the message, defaults to ASSISTANT_LOG.
 */
@Serializable
data class LLMMessage(
    override val message: String,
    override val messageType: MessageType = MessageType.ASSISTANT_LOG
) : AgentMessage

/**
 * Represents a message of type `TOOL_CALL` used to encapsulate information about a tool call.
 *
 * @property message The content of the tool call message, formatted as "Tool Call: <toolName>, Args: <toolArgs>, Result: <result>".
 * @property messageType The type of the message, which is always `MessageType.TOOL_CALL`.
 */
@Serializable
data class LLMToolCallMessage private constructor(
    override val message: String
) : AgentMessage {
    constructor(toolName: String, toolArgs: String, result: String? = null) : this(
        "Tool Call:  $toolName, Args: $toolArgs, Result: $result"
    )

    override val messageType: MessageType = MessageType.TOOL_CALL
}

/**
 * Represents an error message in the LLM system.
 */
@Serializable
data class LLMErrorMessage(
    override val message: String
) : AgentMessage {
    override val messageType: MessageType = MessageType.ASSISTANT_ERROR
}
